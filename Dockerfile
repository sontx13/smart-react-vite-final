# ==========================================
# üß± Stage 1: Build frontend (Node 20 Alpine)
# ==========================================
FROM node:20-alpine AS build

WORKDIR /app

# C√†i ƒë·∫∑t c√°c th∆∞ vi·ªán c·∫ßn thi·∫øt (v√† cache npm)
COPY package*.json ./

# D√πng cache npm ƒë·ªÉ build nhanh h∆°n ·ªü l·∫ßn sau
RUN npm ci --legacy-peer-deps

# TƒÉng b·ªô nh·ªõ node khi build (fix l·ªói heap out of memory)
ENV NODE_OPTIONS="--max-old-space-size=2048"

# Copy to√†n b·ªô source v√†o container
COPY . .

# Build Vite app ·ªü ch·∫ø ƒë·ªô production
RUN npm run build


# ==========================================
# üåê Stage 2: Serve build b·∫±ng Nginx
# ==========================================
FROM nginx:alpine

# Copy build output t·ª´ stage 1
COPY --from=build /app/dist /usr/share/nginx/html

# X√≥a file default v√† copy config m·ªõi (n·∫øu b·∫°n c√≥)
# COPY ./nginx.conf /etc/nginx/conf.d/default.conf

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
